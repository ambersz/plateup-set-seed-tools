import{h as f,u as e,g as d}from"./main-ZwBxnzCQ.js";import{S as m}from"./utils-Q6qU-psA.js";const b=[[6,2,5],[3,0,1],[8,4,7]],u=new Array(8).fill(!1);u[0]=!0;u[1]=!0;m(u);u.splice(0,0,!1);const g=()=>{const[a,l]=f(u),r=new Array(8).fill(1),o=a.reduce((t,i,n)=>i?Math.min(t,n):t,1/0);for(let t=0;t<r.length;t++)a[(t+o)%r.length+1]||(r[(t+o+1)%r.length]+=r[(t+o)%r.length],r[(t+o)%r.length]=0);return e("div",{children:[e("hr",{}),e("h3",{children:"Cabinet Probability Calculator"}),e("ul",{style:{marginTop:-15},children:["AKA"," ",e("i",{children:"I want to use my own layout-- just tell me which cabinet to use"})]}),e("div",{children:e("table",{children:b.map(t=>e("tr",{children:t.map(i=>i===0?e("td",{children:"R"}):e("td",{style:{minWidth:"2lh"},children:[(r[i-1]/8*100).toString().slice(0,4),"%",e("br",{}),e("input",{type:"checkbox",checked:!!a[i],onChange:n=>{const c=n.target;l(h=>{const s=[...h];return s[i]=c.checked,s})}})]}))}))})})]})};function p(a,l){const r=8-a+l,o=8-a+1;let t=100;for(let n=0;n<l;n++)t*=(o+n)/8;let i=[];for(let n=0;n<8;n++)i.push(e(d,{children:e("table",{children:e("tbody",{children:b.map(c=>e("tr",{children:c.map(h=>{if(!h)return"R";const s=(h+n)%8;return s<l?"T":s<a?"C":"Â "}).map(h=>e("td",{children:h}))}))})})}));return e("div",{children:[l>1?e(d,{children:[t.toFixed(2),"-",((r/8)**l*100).toFixed(2),"% chance of researching all the scum targets before researching other cabinets. (Range because I can't be bothered to figure out the actual probability)"]}):e(d,{children:[(r/8*100).toFixed(2),"% chance of researching the scum target first."]}),e("div",{children:"R: Research Desk"}),e("div",{children:"T: Scum Target(s)"}),e("div",{children:"C: Any other cabinets that contain researchable blueprints"}),e("div",{children:i})]})}const C=()=>{const[a,l]=f(2),[r,o]=f(1);return e("div",{children:[e("h3",{children:"Optimal Layouts"}),e("label",{for:"cabinets",children:"Number of Blueprint Cabinets: "}),e("input",{type:"number",id:"cabinets",defaultValue:a.toString(),onChange:t=>{const i=t.target,n=Number(i.value),c=Math.min(7,Math.max(r+1,n));l(c),c!==n&&(i.value=c.toString())}}),e("br",{}),e("label",{for:"targets",children:"Number of scum targets: "}),e("input",{type:"number",id:"targets",defaultValue:r.toString(),onChange:t=>{const i=t.target,n=Number(i.value),c=Math.min(a-1,Math.max(1,n));o(c),c!==n&&(i.value=c.toString())}}),e("div",{children:p(a,r)}),e(g,{})]})};export{C as default};
