import{j as g,h as b,u as e,g as d}from"./main-yNhaPxmU.js";const f=[[6,2,5],[3,0,1],[8,4,7]],u=new Array(8).fill(!1);u[0]=!0;u[1]=!0;g(u);u.splice(0,0,!1);const m=()=>{const[a,l]=b(u),n=new Array(8).fill(1),o=a.reduce((t,i,r)=>i?Math.min(t,r):t,1/0);for(let t=0;t<n.length;t++)a[(t+o)%n.length+1]||(n[(t+o+1)%n.length]+=n[(t+o)%n.length],n[(t+o)%n.length]=0);return e("div",{children:[e("hr",{}),e("h3",{children:"Cabinet Probability Calculator"}),e("ul",{style:{marginTop:-15},children:["AKA ",e("i",{children:"I already have a layout-- just tell me which cabinet to use"})]}),e("div",{children:e("table",{children:f.map(t=>e("tr",{children:t.map(i=>i===0?e("td",{children:"R"}):e("td",{style:{minWidth:"2lh"},children:[(n[i-1]/8*100).toString().slice(0,4),"%",e("br",{}),e("input",{type:"checkbox",checked:!!a[i],onChange:r=>{const c=r.target;l(h=>{const s=[...h];return s[i]=c.checked,s})}})]}))}))})})]})};function p(a,l){const n=8-a+l,o=8-a+1;let t=100;for(let r=0;r<l;r++)t*=(o+r)/8;let i=[];for(let r=0;r<8;r++)i.push(e(d,{children:e("table",{children:e("tbody",{children:f.map(c=>e("tr",{children:c.map(h=>{if(!h)return"R";const s=(h+r)%8;return s<l?"T":s<a?"C":"Â "}).map(h=>e("td",{children:h}))}))})})}));return e("div",{children:[l>1?e(d,{children:[t.toFixed(2),"-",((n/8)**l*100).toFixed(2),"% chance of researching all the scum targets before researching other cabinets. (Range because I can't be bothered to figure out the actual probability)"]}):e(d,{children:[(n/8*100).toFixed(2),"% chance of researching the scum target first."]}),e("div",{children:"R: Research Desk"}),e("div",{children:"T: Scum Target(s)"}),e("div",{children:"C: Any other cabinets that contain researchable blueprints"}),e("div",{children:i})]})}const v=()=>{const[a,l]=b(2),[n,o]=b(1);return e("div",{children:[e("h3",{children:"Optimal Layouts"}),e("label",{for:"cabinets",children:"Number of Blueprint Cabinets: "}),e("input",{type:"number",id:"cabinets",defaultValue:a.toString(),onChange:t=>{const i=t.target,r=Number(i.value),c=Math.min(7,Math.max(n+1,r));l(c),c!==r&&(i.value=c.toString())}}),e("br",{}),e("label",{for:"targets",children:"Number of scum targets: "}),e("input",{type:"number",id:"targets",defaultValue:n.toString(),onChange:t=>{const i=t.target,r=Number(i.value),c=Math.min(a-1,Math.max(1,r));o(c),c!==r&&(i.value=c.toString())}}),e("div",{children:p(a,n)}),e(m,{})]})};export{v as default};
