import{defaultBranchingRerollConfig as F}from"./branchingRerolls-DAAKiH3f.js";import{u as P}from"./usePersistentState-CvwtuqA8.js";import{k as b,l as T,u as e,g as j,R as B,m as z}from"./main-CpO9Gw3m.js";import{R as O}from"./run-vsHhZQAr.js";import"./GhostBlueprints-CdXpvp7Q.js";const _=(c,y)=>{let r=1e4;const i=r;let l=new Array(17).fill(0),u=new Array(17).fill(0);for(;r--;){const[s,h]=x(c,[0,...y]);l[s]++,u[s]+=h}return u=u.map((s,h)=>l[h]?s/l[h]:s),l=l.map(s=>s/i),l.slice(1)},x=(c,y)=>{let r=0;for(let i=0;i<=15;i++){const l=c.simulateMoney(i);if(l<10)debugger;if(r+=l,r-=y[i]??0,r<0)return[i,r]}if(Number.isNaN(r))debugger;return[16,r]},E=new Array(15).fill(0),I=new Array(15).fill(0),H=new Array(15).fill(0),q=()=>{const[c,y]=P(F,"BRANCH_CONFIG",t=>{if(typeof t.simpleBPSettings=="boolean"){debugger;return{...t,simpleBPSettings:t.simpleBPSettings?"insideOnly":"full"}}return t}),[r,i]=P(1,"RIG_PLAYER_COUNT"),l=b(E),u=b(I),s=b(H),h=b();T(()=>{let t=[],o=10;for(let f=0;f<15;f++){let g=0;for(let a=0;a<l.value[f];a++)g+=o,o+=10;g+=u.value[f],t.push(g)}s.value=t});const M=[e(j,{})],S=c.cards.filter(t=>!B.some(o=>o.Name===t.Name)),N=c.cards.filter(t=>B.some(o=>o.Name===t.Name));S.length&&N.push(S[0]);const G=S.slice(1),C=new O(c.seed,N,G),k=()=>{const t=_(C,s.value);h.value=t};C.playerCount=r;let R=0,A=C.guessMoney(0),v=2,p=60;for(let t=0;t<v;t++)p+=10*(t+1);p+=460/2;let D=0,m=[],w=0;for(let t=1;t<=15;t++){w+=s.value[t-1];const o=C.getGroupSizes(t),f=o.reduce((a,n)=>a+n);R+=f;const g=C.guessMoney(t);A+=g;{m.sort((n,d)=>d-n);let a=3;m.length>8&&(a+=3);for(let n=0;n<Math.min(m.length,a);n++)m[n]=Math.ceil(m[n]/2);if(p+=m.reduce((n,d)=>n+d,0),D+=m.length,t!==5){let n=A-p;for(;n>0;){let d=(v+1)*10;if(d+=10,v%8||(d+=60),d>n)break;v++,m.push(30),p+=d,n-=d}}}M.push(e("tr",{children:[e("td",{children:t}),e("td",{children:o.length}),e("td",{children:f}),e("td",{children:Math.round(g)}),!1,e("td",{children:o.join(",")}),e("td",{children:e("input",{type:"number",value:l.value[t-1],onChange:a=>{l.value=[...l.value],l.value[t-1]=a.target.valueAsNumber}})}),e("td",{children:e("input",{type:"number",value:u.value[t-1],onChange:a=>{u.value=[...u.value],u.value[t-1]=a.target.valueAsNumber}})}),e("td",{children:w}),e("td",{children:Math.round(A)}),e("td",{children:h.value?`${(h.value[t-1]*100).toFixed(2)}%`:""})]}))}return e("div",{children:[e("label",{for:"playerCount",children:"Player Count"}),e("input",{id:"playerCount",defaultValue:r.toString(),type:"number",onChange:t=>{const o=t.target;i(Number(o.value))}}),e(z,{onConfigChange:y,config:c,mode:"cards"}),e("div",{children:["Total Customers: ",R]}),e("table",{children:[e("thead",{children:e("tr",{children:[e("td",{children:"Day"}),e("td",{children:"Groups"}),e("td",{children:"Customers"}),e("td",{children:"Average Money"}),!1,e("td",{children:"All Groups"}),e("td",{children:"Rerolls"}),e("td",{children:"Appliance Costs"}),e("td",{children:"Total Costs"}),e("td",{children:"Cumulative Money"}),e("td",{children:["Probability of running out of money ",e("br",{}),e("button",{onClick:k,children:"Run Simulation"})]})]})}),e("tbody",{children:M})]})]})};export{q as default};
