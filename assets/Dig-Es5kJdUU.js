import{k as d,_ as M,l as J,p as _,R as K,b as Q,o as W,u as t,m as X,q as Y,g as Z}from"./main-DuVFAb8A.js";import{a as P,u as $}from"./usePersistentState-BV3e9HVq.js";import{defaultBranchingRerollConfig as ee}from"./branchingRerolls-Dv5hsWbs.js";import{t as te,d as ne}from"./getCardPaths-CwqYjpZx.js";import"./GhostBlueprints-CH8J7_Z3.js";const k={spawnInside:!0,blueprintCount:0},E={spawnInside:!1,playerInside:!0,blueprintCount:0},F={spawnInside:!1,playerInside:!1,blueprintCount:0},oe=()=>{const c=P([],"DIG_TARGET_APPLIANCES"),i=d(1),v=P(1,"DIG_BLUEPRINT_CABS"),h=P(0,"DIG_AVAILABLE_FODDER"),g=d(0),m=d(0),y=d(0),A=d(0),S=d(0),[r,L]=$(ee,"BRANCH_CONFIG",e=>{let n={...e};return typeof n.simpleBPSettings=="boolean"&&(n={...n,simpleBPSettings:e.simpleBPSettings?"insideOnly":"full"}),n={...n,searchDepth:2},n}),p=d(),N=d(0),w=M(r.day),b=d(r.searchDepth);J(()=>{p.value&&(N.value?p.value.numTiles=N.value:p.value.numTiles=p.value.getLayoutInfo()[1])}),_(()=>{b.value=r.searchDepth},[r]);const D=M([]);_(()=>{const e=[];let n=r.cards.filter(l=>K.some(o=>o.ID===l.ID)).length;for(let l=0;l<n;l++)e.push(r.cards[l]);const C=e.some(l=>l.Name==="Turbo"),u=C?te:ne;for(const l of u){if(l>r.day)break;const o=r.cards[n];o&&e.push(o),n++}if(D.current.length===e.length){let l=!0;for(let o=0;o<e.length;o++)if(D.current[o]!==e[o].ID){l=!1;break}if(l&&w.current===r.day)return}const f=new Q(r.seed,C?.25:0);f.OwnedAppliances=[...r.appliances];for(let l=0;l<e.length;l++)f.addCard(e[l]);w.current=r.day,D.current=e.map(l=>l.ID),p.value=f},[r]);const x=W(()=>{var o;if(!p.value)return[];N.value;const e=p.value.Cards.some(a=>a.Name==="Turbo"),n=p.value.getAppliances([{spawnInside:!0,blueprintCount:e?7:5}],1).length,C=b.value-g.value-m.value-y.value+-1;let u=[0,0];const f=[];for(let a=0;a<g.value;a++)f.push(k);for(let a=0;a<m.value;a++)f.push(E);for(let a=0;a<y.value;a++)f.push(F);let l=[];if(b.value===1)return l.push([[0,0,0],0,p.value.getAppliances([{spawnInside:!0,blueprintCount:e?7:5}],w.current).map(a=>a.Name)]),l;for(;;){const a=[...f];for(let s=0;s<u[0];s++)a.push(k);for(let s=0;s<u[1];s++)a.push(E);for(let s=u[0]+u[1];s<C;s++)a.push(F);a.splice(0,1,{...a[0]}),a.push({spawnInside:!0,blueprintCount:(e?7:5)+h.value-(b.value-2)*i.value*0});const H=Math.max(b.value-2,A.value),j=Math.min(S.value||1/0,G(n+h.value,b.value-2,-i.value*0));for(let s=j;s>=H;s--){a[0].blueprintCount=s+n;const I=(o=p.value)==null?void 0:o.getAppliances(a,w.current);if(I===void 0)debugger;const q=Math.floor(s/(b.value-2))+h.value+v.value;for(;I.length>q;)I.pop();let B=-1,R=Math.min(c.value.length,i.value);if(R){for(let O=0;O<I.length;O++)if(c.value.some(z=>z.Name===I[O].Name)&&(R--,!R)){B=O;break}if(B===-1)continue;const T=Math.max(1,B+1-Math.max(v.value,h.value)),V=G(T,b.value-2,i.value*0);if(s<V){console.log("not reachable with this blueprint cabinet setup");continue}}const U=[[u[0]+g.value,u[1]+m.value,C-u[0]-u[1]+y.value],s,I.map(T=>T.Name)];l.push(U)}if(u[1]++,u[0]+u[1]>C&&(u[0]++,u[1]=0),u[0]+u[1]>C)break}return l});return t("div",{class:"search-container",children:[t("div",{class:"search-config",children:[t("label",{children:"Blueprint Cabs:"}),t("input",{style:{width:40},value:v,type:"number",onChange:e=>{var n;return v.value=((n=e.target)==null?void 0:n.valueAsNumber)||0}}),t("label",{children:"Fodder available:"}),t("input",{style:{width:40},value:h,type:"number",onChange:e=>{var n;return h.value=((n=e.target)==null?void 0:n.valueAsNumber)||0}}),t("div",{children:[t("label",{children:"Min Inside/OI/OO"}),t("input",{style:{width:40},value:g,onChange:e=>{g.value=e.target.valueAsNumber||0},type:"number"}),t("input",{style:{width:40},value:m,onChange:e=>{m.value=e.target.valueAsNumber||0},type:"number"}),t("input",{style:{width:40},value:y,onChange:e=>{y.value=e.target.valueAsNumber||0},type:"number"})]}),t("div",{children:[t("label",{children:"Rerolled blueprint bounds"}),t("input",{style:{width:40},value:A,onChange:e=>{const n=e.target.valueAsNumber||0;A.value=n},type:"number"}),t("input",{style:{width:40},value:S,onChange:e=>{const n=e.target.valueAsNumber;S.value=n||0},type:"number"})]}),t(X,{onConfigChange:L,config:r,mode:"rerolls"}),t("label",{children:"Number of indoor tiles (0 to default to normal layout):"}),t("input",{value:N,type:"number",onChange:e=>{N.value=e.target.valueAsNumber}})]}),t("div",{class:"search-results",children:[t(Y,{label:"Target Appliances",onSelectionChange:e=>c.value=e,appliances:c.value,shopModifiersOnly:!1}),t("div",{children:[t("label",{children:"Minimum number of target appliances"}),t("input",{style:{width:40},type:"number",value:i,onChange:e=>i.value=e.target.valueAsNumber||0})]}),x.value.length?x.value.map(e=>t(le,{hit:e})):"No hits",!1]})]})},le=({hit:c})=>{const[[i,v,h],g,m]=c;return t("div",{children:["I: ",i,", OI: ",v,", OO: ",h,", total blueprints rerolled: ",g,t("br",{}),m.map((y,A)=>t(Z,{children:[t("span",{style:{display:"inline-block"},children:[y,A===m.length-1?"":","]})," "]}))]})};function G(c,i,v=-1){return i<0?0:(c+c+v*(i-1))*i/2}export{oe as default};
