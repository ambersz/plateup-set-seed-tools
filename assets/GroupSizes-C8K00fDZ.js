import{defaultBranchingRerollConfig as T}from"./branchingRerolls-Dv5hsWbs.js";import{u as B}from"./usePersistentState-BV3e9HVq.js";import{k as b,l as j,u as e,g as z,R as G,m as O}from"./main-DuVFAb8A.js";import{R as _}from"./run-CwqTShxh.js";import"./GhostBlueprints-CH8J7_Z3.js";const x=(d,y)=>{let r=1e4;const i=r;let l=new Array(17).fill(0),u=new Array(17).fill(0);for(;r--;){const[s,c]=E(d,[0,...y]);l[s]++,u[s]+=c}return u=u.map((s,c)=>l[c]?s/l[c]:s),l=l.map(s=>s/i),l.slice(1)},E=(d,y)=>{let r=0;for(let i=0;i<=15;i++){const l=d.simulateMoney(i);if(l<10)debugger;if(r+=l,r-=y[i]??0,r<0)return[i,r]}if(Number.isNaN(r))debugger;return[16,r]},I=new Array(15).fill(0),H=new Array(15).fill(0),L=new Array(15).fill(0),J=()=>{const[d,y]=B(T,"BRANCH_CONFIG",t=>{if(typeof t.simpleBPSettings=="boolean"){debugger;return{...t,simpleBPSettings:t.simpleBPSettings?"insideOnly":"full"}}return t}),[r,i]=B(1,"RIG_PLAYER_COUNT"),l=b(I),u=b(H),s=b(L),c=b();j(()=>{let t=[],o=10;for(let m=0;m<15;m++){let f=0;for(let a=0;a<l.value[m];a++)f+=o,o+=10;f+=u.value[m],t.push(f)}s.value=t});const M=[e(z,{})],S=d.cards.filter(t=>!G.some(o=>o.Name===t.Name)),N=d.cards.filter(t=>G.some(o=>o.Name===t.Name));S.length&&N.push(S[0]);const k=S.slice(1),g=new _(d.seed,N,k),D=()=>{const t=x(g,s.value);c.value=t};g.playerCount=r;let R=0,A=g.guessMoney(0),v=2,C=60;for(let t=0;t<v;t++)C+=10*(t+1);C+=460/2;let F=0,h=[],P=0;for(let t=1;t<=15;t++){P+=s.value[t-1];const o=g.getGroupSizes(t),m=o.reduce((a,p)=>a+p);R+=m;const f=g.guessMoney(t);A+=f;{h.sort((n,w)=>w-n);let a=3;h.length>8&&(a+=3);for(let n=0;n<Math.min(h.length,a);n++)h[n]=Math.ceil(h[n]/2);C+=h.reduce((n,w)=>n+w,0),F+=h.length;let p=A-C;for(;p>0;){let n=(v+1)*10;if(n+=10,v%8||(n+=60),n>p)break;v++,h.push(30),C+=n,p-=n}}M.push(e("tr",{children:[e("td",{children:t}),e("td",{children:o.length}),e("td",{children:m}),e("td",{children:Math.round(f)}),!1,e("td",{children:o.join(",")}),e("td",{children:e("input",{type:"number",style:{width:40},value:l.value[t-1],onChange:a=>{l.value=[...l.value],l.value[t-1]=a.target.valueAsNumber}})}),e("td",{children:e("input",{type:"number",style:{width:40},value:u.value[t-1],onChange:a=>{u.value=[...u.value],u.value[t-1]=a.target.valueAsNumber}})}),e("td",{children:P}),e("td",{children:Math.round(A)}),e("td",{children:c.value?`${(c.value[t-1]*100).toFixed(2)}%`:""})]}))}return e("div",{children:[e("label",{for:"playerCount",children:"Player Count"}),e("input",{id:"playerCount",defaultValue:r.toString(),type:"number",onChange:t=>{const o=t.target;i(Number(o.value))}}),e(O,{onConfigChange:y,config:d,mode:"cards"}),e("div",{children:["Total Customers: ",R]}),e("table",{children:[e("thead",{children:e("tr",{children:[e("td",{children:"Day"}),e("td",{children:"Groups"}),e("td",{children:"Customers"}),e("td",{children:"Average Money"}),!1,e("td",{children:"All Groups"}),e("td",{children:"Rerolls"}),e("td",{children:"Appliance Costs"}),e("td",{children:"Total Costs"}),e("td",{children:"Cumulative Money"}),e("td",{children:["Probability of running out of money ",e("br",{}),e("button",{onClick:D,children:"Run Simulation"})]})]})}),e("tbody",{children:M})]})]})};export{J as default};
